{{ ansible_managed|comment }}

[Unit]
Description=qBittorrent Root Service
Documentation=
Wants=network-online.target
After=network-online.target
RequiresMountsFor={{ podman_qbittorrent_basedir }} {{ podman_qbittorrent_mediadir }}
Requires=qbittorrent-main.service qbittorrent-wg.service
Requires=proton.{{ inventory_hostname }}-network.service
Requires=service.{{ inventory_hostname }}-network.service
Wants=qbittorrent-exporter.service qbittorrent-flood.service qbittorrent-natmap.service
Before=qbittorrent-main.service qbittorrent-exporter.service qbittorrent-flood.service qbittorrent-natmap.service qbittorrent-wg.service

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
TimeoutStopSec=70
ExecStartPre=/bin/rm --force %t/qbittorrent.pid %t/qbittorrent.pod-id
ExecStartPre=/usr/bin/podman pod create \
  --hostname "%N.service.{{ inventory_hostname }}" \
  --infra-conmon-pidfile %t/qbittorrent.pid \
  --label "traefik.enable=true" \
  --label "traefik.http.routers.flood.entrypoints=websecure" \
  #--label "traefik.http.routers.flood.middlewares=oauth@file" \
  --label "traefik.http.routers.flood.rule=Host(`flood.web.{{ inventory_hostname }}`)" \
  --label "traefik.http.routers.flood.service=flood" \
  --label "traefik.http.routers.flood.tls.certresolver={{ realm }}" \
  --label "traefik.http.routers.flood.tls.domains[0].main=flood.web.{{ inventory_hostname }}" \
  --label "traefik.http.services.flood.loadbalancer.server.port=3000" \
  --label "traefik.http.routers.qbittorrent.entrypoints=websecure" \
  #--label "traefik.http.routers.qbittorrent.middlewares=oauth@file" \
  --label "traefik.http.routers.qbittorrent.rule=Host(`%N.web.{{ inventory_hostname }}`)" \
  --label "traefik.http.routers.qbittorrent.service=qbittorrent" \
  --label "traefik.http.routers.qbittorrent.tls.certresolver={{ realm }}" \
  --label "traefik.http.routers.qbittorrent.tls.domains[0].main=%N.web.{{ inventory_hostname }}" \
  --label "traefik.http.services.qbittorrent.loadbalancer.server.port=8080" \
  --name "%N.service.{{ inventory_hostname }}" \
{% if podman_proton_network_subnet is defined %}
  --network "proton.{{ inventory_hostname }}:alias=%N.proton.{{ inventory_hostname }}" \
{% endif %}
  --network "service.{{ inventory_hostname }}" \
  --pod-id-file %t/qbittorrent.pod-id \
  --replace \
  --sysctl "net.ipv4.conf.all.src_valid_mark=1" \
  --sysctl "net.ipv6.conf.all.disable_ipv6=1" \
  --volume "/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro" \
  --volume "{{ podman_qbittorrent_basedir }}/config:/config:rw" \
  --volume "{{ podman_qbittorrent_mediadir }}/INCOMING:/data/INCOMING:rw" \
  --volume "{{ podman_qbittorrent_basedir }}/wireguard:/etc/wireguard:ro" \
  --volume "/var/run/podman/podman.sock:/var/run/docker.sock:rw"

ExecStart=/usr/bin/podman pod start --pod-id-file %t/qbittorrent.pod-id
ExecStop=/usr/bin/podman pod stop --ignore --pod-id-file %t/qbittorrent.pod-id --time 10
ExecStopPost=/usr/bin/podman pod rm --ignore --force --pod-id-file %t/qbittorrent.pod-id
PIDFile=%t/qbittorrent.pid
Type=forking

[Install]
WantedBy=multi-user.target

