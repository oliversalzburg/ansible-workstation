[Unit]
Description=PostgreSQL
Documentation=https://www.postgresql.org/docs/
Wants=network.target
After=network.target
StartLimitIntervalSec=10

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
RestartSec=10
StartLimitBurst=3
# docker.io rate-limit delays can abort startup if timeout is too short.
TimeoutStartSec=300
TimeoutStopSec=70
ExecStartPre=/bin/rm --force %t/container-postgres.pid %t/container-postgres.ctr-id
ExecStartPre=-/usr/bin/podman pull docker.io/library/postgres:{{ postgres_version }}
ExecStart=/usr/bin/podman run \
    --cgroups no-conmon \
    --cidfile %t/container-postgres.ctr-id \
    --conmon-pidfile %t/container-postgres.pid \
    --detach \
    --env "POSTGRES_PASSWORD={{ postgres_password }}" \
    --env "POSTGRES_USER={{ postgres_user }}" \
    --hostname %n \
    --log-driver journald \
    --mount "type=bind,source={{ postgres_basedir }}/data,target=/var/lib/postgresql/data" \
    --name %n \
    --network "service" \
    --publish "5432:5432/tcp" \
    --pull never \
    --replace \
    --rm \
    postgres:{{ postgres_version }}

ExecStop=/usr/bin/podman stop --ignore --cidfile %t/container-postgres.ctr-id --time 10
ExecStopPost=/usr/bin/podman rm --ignore --force --cidfile %t/container-postgres.ctr-id
PIDFile=%t/container-postgres.pid
Type=forking

[Install]
WantedBy=multi-user.target default.target
