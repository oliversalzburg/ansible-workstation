[Unit]
Description=Prometheus
Documentation=https://prometheus.io/docs
Wants=network.target
After=network.target
StartLimitIntervalSec=10

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
RestartSec=10
StartLimitBurst=3
# docker.io rate-limit delays can abort startup if timeout is too short.
TimeoutStartSec=300
TimeoutStopSec=70
ExecStartPre=/bin/rm --force %t/container-prometheus.pid %t/container-prometheus.ctr-id
ExecStartPre=-/usr/bin/podman pull quay.io/prometheus/prometheus:{{ prometheus_version }}
ExecStart=/usr/bin/podman run \
    --cgroups no-conmon \
    --cidfile %t/container-prometheus.ctr-id \
    --conmon-pidfile %t/container-prometheus.pid \
    --detach \
    --hostname %n \
    --label "traefik.enable=true" \
    --label "traefik.http.routers.prometheus.entrypoints=websecure" \
    --label "traefik.http.routers.prometheus.rule=Host(`%n.{{ inventory_hostname }}.{{ realm }}`)" \
    --label "traefik.http.routers.prometheus.tls.certresolver={{ realm }}" \
    --label "traefik.http.routers.prometheus.tls.domains[0].main=%n.{{ inventory_hostname }}.{{ realm }}" \
    --label "traefik.http.services.prometheus.loadbalancer.server.port=9090" \
    --log-driver journald \
    --mount "type=bind,source={{ prometheus_basedir }}/data,target=/prometheus,rw=true" \
    --mount "type=bind,source={{ prometheus_basedir }}/etc,target=/etc/prometheus,ro=true" \
    --name %n \
    --network "service" \
    --pull never \
    --replace \
    --rm \
    --user "1000:1000" \
    prometheus/prometheus:{{ prometheus_version }}

ExecStop=/usr/bin/podman stop --ignore --cidfile %t/container-prometheus.ctr-id --time 10
ExecStopPost=/usr/bin/podman rm --ignore --force --cidfile %t/container-prometheus.ctr-id
PIDFile=%t/container-prometheus.pid
Type=forking

[Install]
WantedBy=multi-user.target default.target
