---
- name: Ensure working directory exists
  become: true
  ansible.builtin.file:
    path: "{{ synapse_basedir }}"
    state: directory
    owner: "{{ ansible_user }}"

- name: Ensure directories exists
  become: true
  ansible.builtin.file:
    path: "{{ synapse_basedir }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
  loop:
    - data

- name: Create user synapse
  community.postgresql.postgresql_user:
    host: localhost
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    name: "{{ synapse_user }}"
    password: "{{ synapse_password }}"

- name: Drop database
  community.postgresql.postgresql_db:
    host: localhost
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    name: "{{ synapse_db }}"
    state: absent
    force: true

- name: Create database for synapse
  community.postgresql.postgresql_db:
    encoding: UTF-8
    host: localhost
    lc_collate: C
    lc_ctype: C
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    name: "{{ synapse_db }}"
    owner: "{{ synapse_user }}"
    template: template0

- name: "GRANT ALL PRIVILEGES ON DATABASE {{ synapse_db }} TO {{ synapse_user }}"
  community.postgresql.postgresql_privs:
    host: localhost
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    db: postgres
    privs: ALL
    type: database
    obj: "{{ synapse_db }}"
    role: "{{ synapse_user }}"

- name: "GRANT USAGE, CREATE ON SCHEMA PUBLIC TO {{ synapse_user }}"
  community.postgresql.postgresql_privs:
    host: localhost
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    db: postgres
    privs: CREATE
    type: schema
    objs: public
    role: "{{ synapse_user }}"

- name: Copy synapse configuration file
  become: true
  ansible.builtin.template:
    src: homeserver.yaml.j2
    dest: "{{ synapse_basedir }}/data/homeserver.yaml"
    owner: root
    group: root
    mode: 0644

- name: Copy synapse service file
  become: true
  ansible.builtin.template:
    src: synapse.service.j2
    dest: "{{ directory_systemd }}/synapse.service"
    owner: root
    group: root
    mode: 0644

- name: Enable and check synapse service
  become: true
  ansible.builtin.systemd:
    name: synapse
    daemon_reload: true
    state: restarted
    enabled: true
