---
- name: Ensure working directory exists
  become: true
  ansible.builtin.file:
    path: "{{ mattermost_basedir }}"
    state: directory
    owner: "{{ ansible_user }}"

- name: Ensure directories exists
  become: true
  ansible.builtin.file:
    path: "{{ mattermost_basedir }}/{{ item }}"
    state: directory
    owner: "{{ ansible_user }}"
  loop:
    - config
    - data
    - logs
    - plugins
    - client/plugins
    - bleve-indexes

- name: Create user mattermost
  community.postgresql.postgresql_user:
    host: localhost
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    db: "{{ mattermost_db }}"
    name: "{{ mattermost_user }}"
    password: "{{ mattermost_password }}"

- name: Create database for mattermost
  community.postgresql.postgresql_db:
    host: localhost
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    name: "{{ mattermost_db }}"
    owner: "{{ mattermost_user }}"

- name: "GRANT ALL PRIVILEGES ON DATABASE {{ mattermost_db }} TO {{ mattermost_user }}"
  community.postgresql.postgresql_privs:
    host: localhost
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    db: postgres
    privs: ALL
    type: database
    obj: "{{ mattermost_db }}"
    role: "{{ mattermost_user }}"

- name: "GRANT USAGE, CREATE ON SCHEMA PUBLIC TO {{ mattermost_user }}"
  community.postgresql.postgresql_privs:
    host: localhost
    login_password: "{{ postgres_password }}"
    login_user: "{{ postgres_user }}"
    db: postgres
    privs: CREATE
    type: schema
    objs: public
    role: "{{ mattermost_user }}"

- name: Copy mattermost service file
  become: true
  ansible.builtin.template:
    src: mattermost.service.j2
    dest: "{{ directory_systemd }}/mattermost.service"
    owner: root
    group: root
    mode: 0644

- name: Enable and check mattermost service
  become: true
  ansible.builtin.systemd:
    name: mattermost
    daemon_reload: true
    state: restarted
    enabled: true
