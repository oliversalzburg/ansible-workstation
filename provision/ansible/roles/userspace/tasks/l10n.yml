---
- name: Set timezone
  become: true
  community.general.timezone:
    name: "{{ config_system_timezone }}"

- name: Get current locale configuration
  ansible.builtin.command:
    cmd: localectl status
  register: locale_status
  changed_when: false

- name: Parse 'LANG' from current locale configuration
  ansible.builtin.set_fact:
    locale_lang: "{{ locale_status.stdout | regex_search('LANG=([^\n]+)', '\\1') | first }}"

- name: Configure locales to be generated
  become: true
  ansible.builtin.debconf:
    name: locales
    question: locales/locales_to_be_generated
    value: de_DE.UTF-8 UTF-8, en_US.UTF-8 UTF-8
    vtype: multiselect

- name: Reconfigure locales
  become: true
  changed_when: locale_lang != config_system_locale
  ansible.builtin.command:
    cmd: dpkg-reconfigure locales
  environment:
    DEBIAN_FRONTEND: noninteractive

- name: Ensure default locales are available
  become: true
  community.general.locale_gen:
    name: "{{ item }}"
    state: present
  with_items:
    - de_DE
    - de_DE.UTF-8
    - en_US
    - en_US.UTF-8

- name: Define locale 'en_DE.UTF-8'
  become: true
  changed_when: locale_lang != config_system_locale
  ansible.builtin.command:
    cmd: localedef -i de_DE -f UTF-8 en_DE.UTF-8

- name: Configure locale
  become: true
  changed_when: locale_lang != config_system_locale
  ansible.builtin.command:
    # cmd: localectl set-locale LANG={{ config_system_locale }}
    cmd: update-locale LANG={{ config_system_locale }} LANGUAGE={{ config_system_locale }} LC_ALL={{ config_system_locale }}
