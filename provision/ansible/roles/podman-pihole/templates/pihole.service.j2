[Unit]
Description=Pi-hole
Documentation=https://pi-hole.net/
Wants=network.target
After=network.target
RequiresMountsFor=/mnt/usb
StartLimitIntervalSec=10

[Service]
Environment=PODMAN_SYSTEMD_UNIT=%n
Restart=on-failure
RestartSec=10
StartLimitBurst=3
# docker.io rate-limit delays can abort startup if timeout is too short.
TimeoutStartSec=300
TimeoutStopSec=70
ExecStartPre=/bin/rm --force %t/%n.pid %t/%n.ctr-id
ExecStartPre=-/usr/bin/podman pull docker.io/pihole/pihole:{{ pihole_version }}
ExecStart=/usr/bin/podman run \
  --cgroups "no-conmon" \
  --cidfile "%t/%n.ctr-id" \
  --conmon-pidfile "%t/%n.pid" \
  --detach \
  # We hardcode /etc/resolv.conf to the pihole itself, otherwise unintentional
  # resolvers can be consumed from DHCP responses that affected the host.
  --dns=127.0.0.1 \
  --env "FTLCONF_LOCAL_IPV4={{ ansible_default_ipv4.address }}" \
  --env "TZ={{ config_system_timezone }}" \
  --hostname "%n.{{ inventory_hostname }}" \
  --label "traefik.enable=true" \
  --label "traefik.http.routers.pihole.entrypoints=websecure" \
  --label "traefik.http.routers.pihole.middlewares=oauth@file" \
  --label "traefik.http.routers.pihole.rule=Host(`%N.web.{{ inventory_hostname }}`)" \
  --label "traefik.http.routers.pihole.tls.certresolver={{ realm }}" \
  --label "traefik.http.routers.pihole.tls.domains[0].main=%N.web.{{ inventory_hostname }}" \
  --label "traefik.http.services.pihole.loadbalancer.server.port=80" \
  --log-driver "journald" \
  --name "%n.{{ inventory_hostname }}" \
  --network "service" \
  --publish "{{ ansible_default_ipv4.address }}:53:53/tcp" \
  --publish "{{ ansible_default_ipv4.address }}:53:53/udp" \
  --pull "never" \
  --replace \
  --rm \
  --secret "pihole_webpassword,type=env,target=WEBPASSWORD" \
  # image does not support rootless. It tries to wildly chown/chmod on the filesystem.
  #--user "{{ _user.uid }}:{{ _groups.results[0].gid }}" \
  --volume "/etc/ssl/certs/ca-certificates.crt:/etc/ssl/certs/ca-certificates.crt:ro" \
  --volume "{{ pihole_basedir }}/etc/pihole:/etc/pihole:rw" \
  --volume "{{ pihole_basedir }}/etc/dnsmasq.d:/etc/dnsmasq.d:rw" \
  pihole:{{ pihole_version }}

ExecStop=/usr/bin/podman stop --ignore --cidfile "%t/%n.ctr-id" --time 10
ExecStopPost=/usr/bin/podman rm --ignore --force --cidfile "%t/%n.ctr-id"
PIDFile=%t/%n.pid
Type=forking

[Install]
WantedBy=multi-user.target
