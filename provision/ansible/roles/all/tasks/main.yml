---
- name: Ensure /etc/dconf/profile
  become: true
  ansible.builtin.file:
    path: /etc/dconf/profile
    state: directory
    owner: root
    group: root
    mode: "0o755"
    recurse: true
- name: Ensure /etc/dconf/db/local.d
  become: true
  ansible.builtin.file:
    path: /etc/dconf/db/local.d
    state: directory
    owner: root
    group: root
    mode: "0o755"
    recurse: true
- name: Configure dconf DB Storage
  become: true
  ansible.builtin.copy:
    src: "{{ role_path }}/files/etc/dconf/profile/user"
    dest: /etc/dconf/profile/user
    owner: root
    group: root
    mode: "0o644"
  notify: Update dconf

- name: Install systemd-resolved
  become: true
  ansible.builtin.apt:
    name:
      - systemd-resolved

- name: Enable systemd-resolved
  become: true
  ansible.builtin.systemd:
    name: systemd-resolved
    state: started
    enabled: true

# Ideally, just reboot fresh machines after this is applied. Then re-run.
# Networking is going to be broken until you reboot. It's some weird systemd shit.
- name: Enable systemd-networkd
  become: true
  ansible.builtin.systemd:
    name: systemd-networkd
    state: started
    enabled: true

- name: Write noswap systemd service config file
  become: true
  ansible.builtin.template:
    src: noswap.service.j2
    dest: /etc/systemd/system/noswap.service
    owner: root
    group: root
    mode: "0o644"
  notify: Enable noswap service

- name: Generate /etc/hosts
  become: true
  ansible.builtin.template:
    src: hosts.j2
    dest: /etc/hosts
    owner: root
    group: root
    mode: "0o644"

- name: APT
  ansible.builtin.include_tasks: apt.yml

- name: Set default editor
  become: true
  community.general.alternatives:
    name: editor
    path: /usr/bin/vim

- name: Age
  ansible.builtin.include_tasks: age.yml
- name: NodeJs
  ansible.builtin.include_tasks: nodejs.yml
- name: SOPS
  ansible.builtin.include_tasks: sops.yml
