---
- name: Set hostname
  become: true
  ansible.builtin.hostname:
    name: "{{ inventory_hostname }}"

- name: "Create network: offline"
  become: true
  ansible.builtin.copy:
    src: "{{ role_path }}/files/etc/systemd/network/offline.network"
    dest: "{{ directory_networkd }}/offline.network"
    owner: root
    group: root
    mode: "0o644"

- name: "Store WPA config: offline"
  become: true
  ansible.builtin.template:
    src: wpa_supplicant-wlp3s0.conf.j2
    dest: /etc/wpa_supplicant/wpa_supplicant-wlp3s0.conf
    owner: root
    group: root
    mode: "0o600"

- name: Configure DNS
  become: true
  ansible.builtin.copy:
    src: "{{ role_path }}/files/etc/systemd/resolved.conf"
    dest: /etc/systemd/resolved.conf
    owner: root
    group: root
    mode: "0o644"

- name: Install systemd-resolved
  become: true
  ansible.builtin.apt:
    name:
      - systemd-resolved

- name: Enable systemd-resolved
  become: true
  ansible.builtin.systemd:
    name: systemd-resolved
    state: restarted
    enabled: true

- name: Enable systemd-networkd
  become: true
  ansible.builtin.systemd:
    name: systemd-networkd
    state: started
    enabled: true


- name: Copy nas-credentials
  become: true
  ansible.builtin.template:
    src: nas-credentials.j2
    dest: "/home/{{ ansible_user }}/nas-credentials"
    mode: "0o700"
    owner: root


- name: Create storage mounts
  become: true
  ansible.builtin.copy:
    src: "{{ role_path }}/files/etc/systemd/{{ item }}"
    dest: "{{ directory_systemd }}/{{ item }}"
    mode: "0o644"
    owner: root
    group: root
  loop:
    - mnt-storage.automount
- name: Create storage mounts
  become: true
  ansible.builtin.template:
    src: "{{ item }}.j2"
    dest: "{{ directory_systemd }}/{{ item }}"
    mode: "0o644"
    owner: root
    group: root
  loop:
    - mnt-storage.mount

- name: Reload systemd
  become: true
  ansible.builtin.systemd:
    daemon_reload: true

- name: Configure NAS mount
  become: true
  ansible.builtin.systemd:
    enabled: false
    name: mnt-storage.mount
    state: started

- name: Configure NAS automount
  become: true
  ansible.builtin.systemd:
    enabled: true
    name: mnt-storage.automount
